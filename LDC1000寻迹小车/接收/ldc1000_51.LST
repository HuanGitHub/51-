C51 COMPILER V9.00   LDC1000_51                                                            07/30/2016 11:49:15 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE LDC1000_51
OBJECT MODULE PLACED IN ldc1000_51.OBJ
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE ldc1000_51.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "ldc1000_51.h"                  
   2          #include "Config.c"
   3          uint16_t Rp_value;        
   4          uint32_t fre_value;                                      
   5          void write_spi(uint8_t add,uint8_t w_data)
   6          {
   7   1        uint8_t ss;
   8   1        SCLK=0;  //SCLK=0;
   9   1        CS=0; //CS=0
  10   1        for(ss=0;ss<8;ss++)
  11   1        {
  12   2          SCLK=0;  //SCLK=0;
  13   2          if((add&0x80)==0x80)
  14   2          {
  15   3            SDI=1; //SDI=1
  16   3          }
  17   2          else
  18   2          {
  19   3            SDI=0;//SDI=0
  20   3          }
  21   2          add=add<<1;
  22   2          SCLK=1;   //sclk=1
  23   2        }
  24   1      
  25   1        for(ss=0;ss<8;ss++)
  26   1        {
  27   2          SCLK=0;  //SCLK=0;
  28   2          if((w_data&0x80)==0x80)
  29   2           {
  30   3             SDI=1; //SDI=1
  31   3           }
  32   2          else
  33   2           {
  34   3             SDI=0;//SDI=0
  35   3           }
  36   2          w_data=w_data<<1;
  37   2          SCLK=1;   //sclk=1
  38   2         }
  39   1        SCLK=0;  //SCLK=0;
  40   1        CS=1; //CS=1
  41   1      
  42   1      }
  43          uint8_t read_spi(uint8_t add)                             
  44          {
  45   1        uint8_t ss;
  46   1        uint8_t sss=0;
  47   1        SCLK=0;  //SCLK=0;
  48   1        CS=0; //CS=0
  49   1        add=add|0x80;
  50   1        for(ss=0;ss<8;ss++)
  51   1        {
  52   2          SCLK=0;  //SCLK=0;
  53   2          if((add&0x80)==0x80)
  54   2          {
  55   3            SDI=1; //SDI=1
C51 COMPILER V9.00   LDC1000_51                                                            07/30/2016 11:49:15 PAGE 2   

  56   3          }
  57   2          else
  58   2          {
  59   3            SDI=0;//SDI=0
  60   3          }
  61   2          add=add<<1;
  62   2          SCLK=1;   //sclk=1
  63   2        }
  64   1      
  65   1        for(ss=0;ss<8;ss++)
  66   1        {
  67   2          SCLK=0;  //SCLK=0;
  68   2          sss=sss<<1;
  69   2          if(SDO==1)  //sdo
  70   2          {
  71   3            sss=sss|0x01;
  72   3          }
  73   2          else
  74   2          {
  75   3            sss=sss&0xfe;
  76   3          }
  77   2          SCLK=1;//sclk=1
  78   2        }
  79   1        SCLK=0;  //SCLK=0;
  80   1        CS=1; //CS=1
  81   1        return sss;
  82   1      }
  83          
  84          void ldc1000_int(void)
  85          {
  86   1        write_spi(LDC1000_CMD_RPMAX,       TEST_RPMAX_INIT);  
  87   1        write_spi(LDC1000_CMD_RPMIN,       TEST_RPMIN_INIT);  
  88   1        write_spi(LDC1000_CMD_SENSORFREQ,  0x94);             
  89   1        write_spi(LDC1000_CMD_LDCCONFIG,   0x17);             
  90   1        write_spi(LDC1000_CMD_CLKCONFIG,   0x00);            
  91   1        write_spi(LDC1000_CMD_INTCONFIG,   0x02);             
  92   1        write_spi(LDC1000_CMD_THRESHILSB,  0x50);              
  93   1        write_spi(LDC1000_CMD_THRESHIMSB,  0x14);
  94   1        write_spi(LDC1000_CMD_THRESLOLSB,  0xC0);             
  95   1        write_spi(LDC1000_CMD_THRESLOMSB,  0x12);
  96   1        write_spi(LDC1000_CMD_PWRCONFIG,   0x01);           
  97   1      }
  98          
  99          
 100          uint16_t Rp_Sample()                                      //¼ÆËã
 101          {
 102   1         uint8_t h,m,l;
 103   1          CS=1;
 104   1          ldc1000_int();                 
 105   1          Init_Lcd();                                         
 106   1        l=read_spi(LDC1000_CMD_PROXLSB); 
 107   1        m=read_spi(LDC1000_CMD_PROXMSB);  
 108   1        Rp_value=m*256+l;
 109   1        l=read_spi(LDC1000_CMD_FREQCTRLSB);  
 110   1        m=read_spi(LDC1000_CMD_FREQCTRMID);
 111   1        h=read_spi(LDC1000_CMD_FREQCTRMSB);  
 112   1        fre_value=h*65536+m*256+l; 
 113   1              return Rp_value;
 114   1      
 115   1      }
 116          
 117          
C51 COMPILER V9.00   LDC1000_51                                                            07/30/2016 11:49:15 PAGE 3   

 118          void delay(uint16_t xx)
 119          {
 120   1        uint16_t xxx;
 121   1        for(xxx=0;xxx<xx;xxx++)
 122   1        {
 123   2         ;
 124   2        }
 125   1      }
 126          
 127          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    333    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
